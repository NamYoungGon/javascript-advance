동적 태그 생성 및 추가


<body>
  <button id="add" type="button">add</button>
  <div id="grid">
    <table style="width: 300px;">
      <colgroup>
        <col style="width: 20%;" />
        <col style="width: 20%;" />
        <col style="width: 20%;" />
        <col style="width: 20%;" />
        <col style="width: 20%;" />
      </colgroup>
      <tbody>
        <!-- <tr>
          <td>0, 0</td><td>0, 1</td><td>0, 2</td><td>0, 3</td><td>0, 4</td>
        </tr>
        <tr>
          <td>1, 0</td><td>1, 1</td><td>1, 2</td><td>1, 3</td><td>1, 4</td>
        </tr>
        <tr>
          <td>2, 0</td><td>2, 1</td><td>2, 2</td><td>2, 3</td><td>2, 4</td>
        </tr> 
        ...
        ...
        <tr>
          <td>5000, 0</td><td>5000, 1</td><td>5000, 2</td><td>5000, 3</td><td>5000, 4</td>
        </tr> 
      -->
      </tbody>
    </table>
  </div>

  <script src="test.js" />
</body>



var grid = document.getElementById('grid');
var gridTable = grid.firstElementChild;
var gridTBody = gridTable.tBodies[0];

var startTime = performance.now();

// ...
// ...

var endTime = performance.now();
console.log((endTime - startTime) + 'ms');





1. createElement

var fragment = document.createDocumentFragment();
var trEle;
var tdEle;
for (var i = 0; i < 5000; i++) {
  trEle = document.createElement('tr');
  for (var j = 0; j < 5; j++) {
    tdEle = document.createElement('td');
    tdEle.textContent = i + ', ' + j;
    trEle.appendChild(tdEle);
  }

  fragment.appendChild(trEle);
}

gridTBody.appendChild(fragment);

/*
createElement
5446.399862514831ms
5795.700223443445ms
5565.00004957398ms

cloneNode
5377.199995553365ms
5397.89998614933ms
5644.400138326425ms

innerHTML
886.7000224434923ms
854.9997160763006ms
881.9000594587303ms

join
883.0000009013452ms
858.9998855291751ms
849.9999549327462ms

2번 innerHTML
2300.099838989725ms
2314.00008232285ms
2244.4997670022967ms

2번 insertAdjacentElement
851.4000442860884ms
886.799771298709ms
913.2999174668362ms
*/






2. innerHTML (string 조합, join)

var str = '';
for (var i = 0; i < 5000; i++) {
  str += '<tr>';
  for (var j = 0; j < 5; j++) {
    str += '<td>';
    str += i + ', ' + j;
    str += '</td>';
  }
  str += '</tr>';
}

gridTBody.innerHTML = str;

180ms


function getStr(rowCount) {
  var arr = [];
  for (var i = 0; i < 5000; i++) {
    arr.push('<tr>');
    for (var j = 0; j < 5; j++) {
      arr.push('<td>' + i + ', ' + j + '</td>');
    }
    arr.push('</tr>');
  }

  return arr.join('');
}

gridTBody.innerHTML = str;

180ms











function getStr(rowCount) {
  var str = '';
  for (var i = 0; i < 5000; i++) {
    str += '<tr>';
    for (var j = 0; j < 5; j++) {
      str += '<td>';
      str += i + ', ' + j;
      str += '</td>';
    }
    str += '</tr>';
  }

  return str;
}

gridTBody.innerHTML = getStr(5000);



gridTBody.innerHTML += getStr(5000);
720ms



function getStr(rowCount) {
  var str = '';
  for (var i = 0; i < 5000; i++) {
    str += '<tr>';
    for (var j = 0; j < 5; j++) {
      str += '<td>';
      str += i + ', ' + j;
      str += '</td>';
    }
    str += '</tr>';
  }

  return str;
}

gridTBody.insertAdjacentHTML('beforeend', getStr(5000));



gridTBody.insertAdjacentHTML('beforeend', getStr(5000));
160ms




join

  var strArr = [];
  for (var i = 0; i < 5000; i++) {
    strArr.push('<tr>');
    for (var j = 0; j < 5; j++) {
      strArr.push('<td>');
      strArr.push(i + ', ' + j);
      strArr.push('</td>');
    }
    strArr.push('</tr>');
  }
  
  gridTBody.innerHTML = strArr.join('');


